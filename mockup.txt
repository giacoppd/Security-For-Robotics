TEAM NAME: TBD

Introduction
Purpose:
To define the requirements and deliverables for (team name)'s capstone project to our sponsor, Vee.
Scope:
We are to find security vunerablities in ROS/SROS of any sort, documentation of these vunerablities, and if possible, produce patches for any found errors as we find managable. Any patches produced will be submitted to the ROS project to be implemented in the main version. However, this will not be a total securing of ROS as we simply do not have enough resources for such a feat.
Definitions:
Vunerablilty: Any explotable piece of code or system that would allow unauthorized users to interact with/damage/control the robot, especially in a malicious manner.
ROS: Robot Operating system, as found at link
SROS: Secure ROS, an offshot of ROS with a goal of implementing various security standards into ROS.
Overall:
Perspective:
All software developed by (Team name) should have 2 objectives:
1. Fixing a specific, known vunerability in ROS/SROS
2. Be lightweight enough that the implementation doesn't severly affect the overall operation of the robot. Ideally, any code produced would be later incorporated into ROS itself, and not an external layer or program.
Software interfaces:
As we are looking for vunerabilites in ROS, all code produced must be compatable with it or integrated into it. The version of ROS we will be using is (XYZ), source (linky)
Communications protocol:
ROS uses 2 major forms of communication. Internally, ROS has the publisher subscriber system, which works basically like a socket system. Publishers export data, and anyone who subscribes to that publisher recieves the data, with no limit to the number of subscribers or any authentication on who can subscribe. There is also normally some sort of wireless/wired connection to a base station, which controls the starting and stopping of the robot. These generally take the form of a standard LAN connection, although with extra effort more complicated setups are possible.
Specific requirements:
As previously stated, at the moment (Team Name) is in the process of finding specific vunerabilities. When we do find one, we will produce documentation outlining at least but not limited to:
Our operating enviroment, the type of attack, the particular system/piece of code attacked, the success rate of the attack, the result of the attack, and the potential fix to prevent the attack.

References (?)


